server:
  port: 8888
spring:
  application:
    name: springcloud-gateway
  redis:
    host: localhost
    password:
    port: 6379
  cloud:
    gateway:
     discovery:
        locator:
         enabled: true #是否与服务注册于发现组件进行结合，通过 serviceId 转发到具体的服务实例。默认为 false，设为 true 便开启通过服务中心的自动根据 serviceId 创建路由的功能。
     globalcors: #网关支持跨域问题
        cors-configurations:
           '[/**]':
             allowedOrigins: "*" # * 表示所有
             allowedMethods:
                - GET
                - POST
                - PUT
     routes:
#     - id: nameRoot
#       uri: lb://springcloudclient
#       predicates:
#       - Path=/name/**
#       filters:
#       - StripPrefix=2  #StripPrefix=2 就代表截取路径的个数
#     - id: add_request_parameter_route
#       uri: lb://springcloudclient
#       filters:
#       - AddRequestParameter=foo, bar #这将为foo=bar所有匹配请求添加下游请求的查询字符串
#       predicates:
#         - Method=GET
#     - id: requestratelimiter_route
#       uri: lb://springcloudclient
#       filters:
#       - StripPrefix=1
#       - name: RequestRateLimiter
#         args:
#           redis-rate-limiter.replenishRate: 10
#           redis-rate-limiter.burstCapacity: 20
#           key-resolver: "#{@userKeyResolver}"
#       predicates:
#         - Path=/user/**
     - id: hystrix_route
       uri: lb://springcloudclient
       predicates:
       - Path=/foo/**
       filters:
       - StripPrefix=1
       - name: Hystrix
         args:
           name: fallbackcmd
           fallbackUri: forward:/fallback
#     - id: retry_test
#       uri: lb://springcloudclient
#       predicates:
#       - Path=/retry
#       filters:
#       - name: Retry
#         args:
#           retries: 3
#           statuses: BAD_GATEWAY
# 心跳检测检测与续约时间
# 测试时将值设置设置小些，保证服务关闭后注册中心能及时踢出服务
eureka:
  instance:
    lease-renewal-interval-in-seconds: 1
    lease-expiration-duration-in-seconds: 2
  client:
    service-url:
      defaultZone: http://eureka8001.com:8001/eureka/,http://eureka8002.com:8002/eureka/,http://eureka8003.com:8003/eureka/    #连接集群环境
logging:
  level:
    org.springframework.cloud.gateway: debug